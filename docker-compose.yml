# Define the version of the Docker Compose file format
version: '3.8'

services:
  # PostgreSQL database service
  postgres:
    image: postgres:16  # Use PostgreSQL 16
    environment:
      POSTGRES_USER: postgres  # Default PostgreSQL username
      POSTGRES_PASSWORD: postgres  # Default PostgreSQL password
      POSTGRES_DB: triphelix  # Database name
    ports:
      - "5432:5432"  # Expose PostgreSQL port
    volumes:
      - postgres_data:/var/lib/postgresql/data  # Persist database data

  # Redis service for caching and pub/sub
  redis:
    image: redis:7  # Use Redis 7
    ports:
      - "6379:6379"  # Expose Redis port
    volumes:
      - redis_data:/data  # Persist Redis data

  # Backend FastAPI service
  backend:
    build:
      context: ./backend  # Build context for backend
      dockerfile: Dockerfile  # Use backend Dockerfile
    volumes:
      - ./backend:/app  # Mount backend code for development
    ports:
      - "8000:8000"  # Expose FastAPI port
    environment:
      - POSTGRES_SERVER=postgres  # Use service name for database host
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=triphelix
      - REDIS_HOST=redis  # Use service name for Redis host
    depends_on:
      - postgres  # Wait for PostgreSQL to start
      - redis  # Wait for Redis to start

  # Frontend Next.js service
  frontend:
    build:
      context: ./frontend  # Build context for frontend
      dockerfile: Dockerfile  # Use frontend Dockerfile
    volumes:
      - ./frontend:/app  # Mount frontend code for development
    ports:
      - "3000:3000"  # Expose Next.js port
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000  # Backend API URL
    depends_on:
      - backend  # Wait for backend to start

# Define named volumes for data persistence
volumes:
  postgres_data:  # PostgreSQL data volume
  redis_data:  # Redis data volume 